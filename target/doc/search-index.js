var searchIndex = JSON.parse('{\
"rcore_task_manage":{"doc":"任务管理 lib","t":[3,8,3,3,3,3,3,8,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CoroId","Manage","PManager","PThreadManager","ProcId","ProcRel","ProcThreadRel","Schedule","ThreadId","add","add","add","add_child","add_child","add_proc","add_thread","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","current","current","dead_children","dead_children","dead_threads","del_child","del_child","del_proc","del_thread","delete","eq","eq","eq","fetch","find_next","find_next","fmt","fmt","fmt","from","from","from","from","from","from","from","from_usize","from_usize","from_usize","get_current_proc","get_mut","get_proc","get_task","get_task","get_thread","get_usize","get_usize","get_usize","hash","hash","hash","insert","into","into","into","into","into","into","into","make_current_blocked","make_current_exited","make_current_exited","make_current_suspend","make_current_suspend","new","new","new","new","new","new","new","parent","parent","partial_cmp","partial_cmp","partial_cmp","re_enque","set_manager","set_manager","set_proc_manager","thread_count","threads","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait","wait_any_child","wait_any_child","wait_child","wait_child","wait_thread","waittid"],"q":["rcore_task_manage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["协程 Id","Manager trait","ProcManager …","PThreadManager …","进程 Id","进程之间的关系，通过进程的 Id …","线程、进程之间的关系，通过进程的 Id …","Scheduler","线程 Id","入队","添加进程，需要指明创建的进程的父进程 Id","添加线程","添加子进程 Id","添加子进程 Id","添加进程","添加线程","","","","","","","","","","","","","","","子进程列表","子进程列表","","","","","","","","","","当前进程","当前线程","已经结束的进程","已经结束的子进程","已经结束的线程","子进程结束，子进程 Id 被移入到 dead_children …","子进程结束，子进程 Id 被移入到 dead_children …","结束当前进程","删除线程","删除 item","","","","出队","找到下一个进程","找到下一个进程","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","获取当前线程所属的进程","获取 mut item","查询进程","获取某个进程","获取某个线程","查询进程的线程","","","","","","","插入 item","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","让当前线程阻塞","…","结束当前线程","阻塞当前进程","当前线程重新入队","新建 PManager","new/fork 创建进程时使用","new/fork 创建进程时使用","新建 PThreadManager","","","","父进程 Id","父进程 Id","","","","某个线程重新入队","设置 manager","设置 manager","设置 proc_manager","某个进程的线程数量","线程","","","","","","","","","","","","","","","","","","","","","","","","","wait 系统调用，返回结束的子进程 id 和 …","wait 系统调用，返回结束的子进程 id 和 …","等待任意一个结束的子进程，直接弹出 …","等待任意一个结束的子进程，直接弹出 …","等待特定的子进程","等待特定的子进程","等待特定的线程结束","wait_tid 系统调用"],"i":[0,0,0,0,0,0,0,0,0,3,4,6,7,8,6,8,4,7,8,6,1,5,9,4,7,8,6,1,5,9,7,8,1,5,9,1,5,9,1,5,9,4,6,7,8,8,7,8,6,8,2,1,5,9,3,4,6,1,5,9,4,7,8,6,1,5,9,1,5,9,6,2,6,4,6,6,1,5,9,1,5,9,2,4,7,8,6,1,5,9,6,4,6,4,6,4,7,8,6,1,5,9,7,8,1,5,9,6,4,6,6,6,8,1,5,9,4,7,8,6,1,5,9,4,7,8,6,1,5,9,4,7,8,6,1,5,9,4,6,7,8,7,8,8,6],"f":[0,0,0,0,0,0,0,0,0,[[]],[[[4,[[0,[[2,[1]],[3,[1]]]]]],1,1]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],5,1]],[[7,1]],[[8,1]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1,1]],[[8,5]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[5,5],[9,9],[[]],[[]],[[]],[[1,1],10],[[5,5],10],[[9,9],10],[[[4,[[0,[[2,[1]],[3,[1]]]]]]],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]],11],0,0,0,[[7,1,12]],[[8,1,12]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1,12]],[[8,5,12]],[[]],[[1,1],13],[[5,5],13],[[9,9],13],[[],11],[[[4,[[0,[[2,[1]],[3,[1]]]]]]],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]],11],[[1,14],15],[[5,14],15],[[9,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,1],[16,5],[16,9],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]],11],[[],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1],11],[[[4,[[0,[[2,[1]],[3,[1]]]]]],1],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],5],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1],[[11,[17]]]],[1,16],[5,16],[9,16],[1],[5],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]]],[[[4,[[0,[[2,[1]],[3,[1]]]]]],12]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],12]],[[[4,[[0,[[2,[1]],[3,[1]]]]]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]]],[[],[[4,[[0,[[2,[1]],[3,[1]]]]]]]],[1,7],[1,8],[[],[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]]]],[[],1],[[],5],[[],9],0,0,[[1,1],[[11,[10]]]],[[5,5],[[11,[10]]]],[[9,9],[[11,[10]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],5]],[[[4,[[0,[[2,[1]],[3,[1]]]]]],[0,[[2,[1]],[3,[1]]]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],[0,[[2,[5]],[3,[5]]]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],[2,[1]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1],16],0,[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[[4,[[0,[[2,[1]],[3,[1]]]]]],1],11],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],1],11],[7,11],[8,11],[[7,1],11],[[8,1],11],[[8,5],[[11,[12]]]],[[[6,[[0,[[2,[5]],[3,[5]]]],[2,[1]]]],5],[[11,[12]]]]],"p":[[3,"ProcId"],[8,"Manage"],[8,"Schedule"],[3,"PManager"],[3,"ThreadId"],[3,"PThreadManager"],[3,"ProcRel"],[3,"ProcThreadRel"],[3,"CoroId"],[4,"Ordering"],[4,"Option"],[15,"isize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
